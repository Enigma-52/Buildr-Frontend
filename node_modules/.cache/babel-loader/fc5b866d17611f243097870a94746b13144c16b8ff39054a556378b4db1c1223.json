{"ast":null,"code":"var _jsxFileName = \"/Users/enigma/Documents/GitHub/Buildr-Frontend/src/pages/Payment.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { auth } from \"../utils/firebase.utils\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Payment = () => {\n  _s();\n  const [user, setUser] = useState(null);\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged(user => {\n      setUser(user);\n    });\n    return () => {\n      unsubscribe();\n    };\n  }, []);\n  const processStripePayment = async () => {};\n  function loadScript(src) {\n    return new Promise(resolve => {\n      const script = document.createElement(\"script\");\n      script.src = src;\n      script.onload = () => {\n        resolve(true);\n      };\n      script.onerror = () => {\n        resolve(false);\n      };\n      document.body.appendChild(script);\n    });\n  }\n  const processRazorpayPayment = async () => {\n    const amount = 5;\n    const currency = 'INR';\n    const receipt = 'Job Board';\n    try {\n      const response = await fetch('/createPayment', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          amount,\n          currency,\n          receipt\n        })\n      });\n      const data = await response.json();\n      const orderId = data.orderId;\n      const orderAmount = data.amount;\n\n      // Initialize Razorpay\n      const options = {\n        key: RAZORPAY_KEY_ID,\n        amount: orderAmount,\n        currency: currency,\n        name: 'Job Board',\n        checkout: {\n          name: \"Job Board\"\n        },\n        description: 'Job Access Fee',\n        order_id: orderId,\n        handler: async function (response) {\n          try {\n            const paymentId = response.razorpay_payment_id;\n            const signature = response.razorpay_signature;\n            const successResponse = await fetch('/paymentSuccess', {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify({\n                orderId,\n                paymentId,\n                signature\n              })\n            });\n            const successMessage = await successResponse.text();\n            console.log(successMessage);\n            userSubscribed = true;\n            fetchJobs(job, company, job_location);\n          } catch (error) {\n            console.error('Error processing payment:', error);\n            alert('Payment failed');\n          }\n        },\n        theme: {\n          color: '#3399cc'\n        }\n      };\n      const rzp = new Razorpay(options);\n      rzp.open();\n    } catch (error) {\n      console.error('Error creating payment:', error);\n      alert('Error creating payment');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen flex items-center justify-center bg-gray-900 text-white\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-gray-800 p-8 rounded-lg shadow-lg max-w-md w-full\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-3xl font-bold mb-6 text-center\",\n        children: \"Just one Last Step!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col space-y-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: processStripePayment,\n          className: \"w-full px-4 py-2 bg-purple-600 text-white rounded-lg hover:bg-green-500 transition duration-300\",\n          children: \"Pay \\u20B939 via Stripe (Coming Soon)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: processRazorpayPayment,\n          className: \"w-full px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-red-500 transition duration-300\",\n          children: \"Pay \\u20B939 via Razorpay\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n};\n_s(Payment, \"5s2qRsV95gTJBmaaTh11GoxYeGE=\");\n_c = Payment;\nexport default Payment;\nvar _c;\n$RefreshReg$(_c, \"Payment\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","auth","axios","jsxDEV","_jsxDEV","Payment","_s","user","setUser","unsubscribe","onAuthStateChanged","processStripePayment","loadScript","src","Promise","resolve","script","document","createElement","onload","onerror","body","appendChild","processRazorpayPayment","amount","currency","receipt","response","fetch","method","headers","JSON","stringify","data","json","orderId","orderAmount","options","key","RAZORPAY_KEY_ID","name","checkout","description","order_id","handler","paymentId","razorpay_payment_id","signature","razorpay_signature","successResponse","successMessage","text","console","log","userSubscribed","fetchJobs","job","company","job_location","error","alert","theme","color","rzp","Razorpay","open","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/enigma/Documents/GitHub/Buildr-Frontend/src/pages/Payment.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { auth } from \"../utils/firebase.utils\";\nimport axios from \"axios\";\n\nconst Payment = () => {\n  const [user, setUser] = useState(null);\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged((user) => {\n      setUser(user);\n    });\n\n    return () => {\n      unsubscribe();\n    };\n  }, []);\n\n  const processStripePayment = async () => {\n  };\n\n  function loadScript(src) {\n    return new Promise((resolve) => {\n        const script = document.createElement(\"script\");\n        script.src = src;\n        script.onload = () => {\n            resolve(true);\n        };\n        script.onerror = () => {\n            resolve(false);\n        };\n        document.body.appendChild(script);\n    });\n}\n\n  const processRazorpayPayment = async () => {\n    const amount = 5;\n    const currency = 'INR';\n    const receipt = 'Job Board';\n\n    try {\n        const response = await fetch('/createPayment', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({ amount, currency, receipt })\n        });\n\n        const data = await response.json();\n        const orderId = data.orderId;\n        const orderAmount = data.amount;\n\n        // Initialize Razorpay\n        const options = {\n            key: RAZORPAY_KEY_ID,\n            amount: orderAmount,\n            currency: currency,\n\n            name: 'Job Board',\n            checkout: {\n              name: \"Job Board\"\n            },\n            description: 'Job Access Fee',\n            order_id: orderId,\n            handler: async function(response) {\n                try {\n                    const paymentId = response.razorpay_payment_id;\n                    const signature = response.razorpay_signature;\n\n                    const successResponse = await fetch('/paymentSuccess', {\n                        method: 'POST',\n                        headers: {\n                            'Content-Type': 'application/json'\n                        },\n                        body: JSON.stringify({ orderId, paymentId, signature })\n                    });\n                      const successMessage = await successResponse.text();\n                      console.log(successMessage);\n\n                      userSubscribed = true;\n\n                      fetchJobs(job, company,job_location);\n                } catch (error) {\n                    console.error('Error processing payment:', error);\n                    alert('Payment failed');\n                }\n            },\n            theme: {\n                color: '#3399cc'\n            }\n        };\n\n        const rzp = new Razorpay(options);\n        rzp.open();\n    } catch (error) {\n        console.error('Error creating payment:', error);\n        alert('Error creating payment');\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen flex items-center justify-center bg-gray-900 text-white\">\n      <div className=\"bg-gray-800 p-8 rounded-lg shadow-lg max-w-md w-full\">\n        <h2 className=\"text-3xl font-bold mb-6 text-center\">Just one Last Step!</h2>\n        <div className=\"flex flex-col space-y-4\">\n          <button\n            onClick={processStripePayment}\n            className=\"w-full px-4 py-2 bg-purple-600 text-white rounded-lg hover:bg-green-500 transition duration-300\"\n          >\n            Pay ₹39 via Stripe (Coming Soon)\n          </button>\n          <button\n            onClick={processRazorpayPayment}\n            className=\"w-full px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-red-500 transition duration-300\"\n          >\n            Pay ₹39 via Razorpay\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Payment;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}