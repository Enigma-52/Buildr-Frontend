{"ast":null,"code":"\"use strict\";\n'use client';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = useCurrentColorScheme;\nexports.getColorScheme = getColorScheme;\nexports.getSystemMode = getSystemMode;\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _getInitColorSchemeScript = require(\"./getInitColorSchemeScript\");\nfunction _getRequireWildcardCache(e) {\n  if (\"function\" != typeof WeakMap) return null;\n  var r = new WeakMap(),\n    t = new WeakMap();\n  return (_getRequireWildcardCache = function (e) {\n    return e ? t : r;\n  })(e);\n}\nfunction _interopRequireWildcard(e, r) {\n  if (!r && e && e.__esModule) return e;\n  if (null === e || \"object\" != typeof e && \"function\" != typeof e) return {\n    default: e\n  };\n  var t = _getRequireWildcardCache(r);\n  if (t && t.has(e)) return t.get(e);\n  var n = {\n      __proto__: null\n    },\n    a = Object.defineProperty && Object.getOwnPropertyDescriptor;\n  for (var u in e) if (\"default\" !== u && {}.hasOwnProperty.call(e, u)) {\n    var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;\n    i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];\n  }\n  return n.default = e, t && t.set(e, n), n;\n}\nfunction getSystemMode(mode) {\n  if (typeof window !== 'undefined' && mode === 'system') {\n    const mql = window.matchMedia('(prefers-color-scheme: dark)');\n    if (mql.matches) {\n      return 'dark';\n    }\n    return 'light';\n  }\n  return undefined;\n}\nfunction processState(state, callback) {\n  if (state.mode === 'light' || state.mode === 'system' && state.systemMode === 'light') {\n    return callback('light');\n  }\n  if (state.mode === 'dark' || state.mode === 'system' && state.systemMode === 'dark') {\n    return callback('dark');\n  }\n  return undefined;\n}\nfunction getColorScheme(state) {\n  return processState(state, mode => {\n    if (mode === 'light') {\n      return state.lightColorScheme;\n    }\n    if (mode === 'dark') {\n      return state.darkColorScheme;\n    }\n    return undefined;\n  });\n}\nfunction initializeValue(key, defaultValue) {\n  if (typeof window === 'undefined') {\n    return undefined;\n  }\n  let value;\n  try {\n    value = localStorage.getItem(key) || undefined;\n    if (!value) {\n      // the first time that user enters the site.\n      localStorage.setItem(key, defaultValue);\n    }\n  } catch (e) {\n    // Unsupported\n  }\n  return value || defaultValue;\n}\nfunction useCurrentColorScheme(options) {\n  const {\n    defaultMode = 'light',\n    defaultLightColorScheme,\n    defaultDarkColorScheme,\n    supportedColorSchemes = [],\n    modeStorageKey = _getInitColorSchemeScript.DEFAULT_MODE_STORAGE_KEY,\n    colorSchemeStorageKey = _getInitColorSchemeScript.DEFAULT_COLOR_SCHEME_STORAGE_KEY,\n    storageWindow = typeof window === 'undefined' ? undefined : window\n  } = options;\n  const joinedColorSchemes = supportedColorSchemes.join(',');\n  const [state, setState] = React.useState(() => {\n    const initialMode = initializeValue(modeStorageKey, defaultMode);\n    const lightColorScheme = initializeValue(`${colorSchemeStorageKey}-light`, defaultLightColorScheme);\n    const darkColorScheme = initializeValue(`${colorSchemeStorageKey}-dark`, defaultDarkColorScheme);\n    return {\n      mode: initialMode,\n      systemMode: getSystemMode(initialMode),\n      lightColorScheme,\n      darkColorScheme\n    };\n  });\n  const colorScheme = getColorScheme(state);\n  const setMode = React.useCallback(mode => {\n    setState(currentState => {\n      if (mode === currentState.mode) {\n        // do nothing if mode does not change\n        return currentState;\n      }\n      const newMode = mode != null ? mode : defaultMode;\n      try {\n        localStorage.setItem(modeStorageKey, newMode);\n      } catch (e) {\n        // Unsupported\n      }\n      return (0, _extends2.default)({}, currentState, {\n        mode: newMode,\n        systemMode: getSystemMode(newMode)\n      });\n    });\n  }, [modeStorageKey, defaultMode]);\n  const setColorScheme = React.useCallback(value => {\n    if (!value) {\n      setState(currentState => {\n        try {\n          localStorage.setItem(`${colorSchemeStorageKey}-light`, defaultLightColorScheme);\n          localStorage.setItem(`${colorSchemeStorageKey}-dark`, defaultDarkColorScheme);\n        } catch (e) {\n          // Unsupported\n        }\n        return (0, _extends2.default)({}, currentState, {\n          lightColorScheme: defaultLightColorScheme,\n          darkColorScheme: defaultDarkColorScheme\n        });\n      });\n    } else if (typeof value === 'string') {\n      if (value && !joinedColorSchemes.includes(value)) {\n        console.error(`\\`${value}\\` does not exist in \\`theme.colorSchemes\\`.`);\n      } else {\n        setState(currentState => {\n          const newState = (0, _extends2.default)({}, currentState);\n          processState(currentState, mode => {\n            try {\n              localStorage.setItem(`${colorSchemeStorageKey}-${mode}`, value);\n            } catch (e) {\n              // Unsupported\n            }\n            if (mode === 'light') {\n              newState.lightColorScheme = value;\n            }\n            if (mode === 'dark') {\n              newState.darkColorScheme = value;\n            }\n          });\n          return newState;\n        });\n      }\n    } else {\n      setState(currentState => {\n        const newState = (0, _extends2.default)({}, currentState);\n        const newLightColorScheme = value.light === null ? defaultLightColorScheme : value.light;\n        const newDarkColorScheme = value.dark === null ? defaultDarkColorScheme : value.dark;\n        if (newLightColorScheme) {\n          if (!joinedColorSchemes.includes(newLightColorScheme)) {\n            console.error(`\\`${newLightColorScheme}\\` does not exist in \\`theme.colorSchemes\\`.`);\n          } else {\n            newState.lightColorScheme = newLightColorScheme;\n            try {\n              localStorage.setItem(`${colorSchemeStorageKey}-light`, newLightColorScheme);\n            } catch (error) {\n              // Unsupported\n            }\n          }\n        }\n        if (newDarkColorScheme) {\n          if (!joinedColorSchemes.includes(newDarkColorScheme)) {\n            console.error(`\\`${newDarkColorScheme}\\` does not exist in \\`theme.colorSchemes\\`.`);\n          } else {\n            newState.darkColorScheme = newDarkColorScheme;\n            try {\n              localStorage.setItem(`${colorSchemeStorageKey}-dark`, newDarkColorScheme);\n            } catch (error) {\n              // Unsupported\n            }\n          }\n        }\n        return newState;\n      });\n    }\n  }, [joinedColorSchemes, colorSchemeStorageKey, defaultLightColorScheme, defaultDarkColorScheme]);\n  const handleMediaQuery = React.useCallback(event => {\n    if (state.mode === 'system') {\n      setState(currentState => {\n        const systemMode = event != null && event.matches ? 'dark' : 'light';\n\n        // Early exit, nothing changed.\n        if (currentState.systemMode === systemMode) {\n          return currentState;\n        }\n        return (0, _extends2.default)({}, currentState, {\n          systemMode\n        });\n      });\n    }\n  }, [state.mode]);\n\n  // Ref hack to avoid adding handleMediaQuery as a dep\n  const mediaListener = React.useRef(handleMediaQuery);\n  mediaListener.current = handleMediaQuery;\n  React.useEffect(() => {\n    const handler = (...args) => mediaListener.current(...args);\n\n    // Always listen to System preference\n    const media = window.matchMedia('(prefers-color-scheme: dark)');\n\n    // Intentionally use deprecated listener methods to support iOS & old browsers\n    media.addListener(handler);\n    handler(media);\n    return () => {\n      media.removeListener(handler);\n    };\n  }, []);\n\n  // Handle when localStorage has changed\n  React.useEffect(() => {\n    if (storageWindow) {\n      const handleStorage = event => {\n        const value = event.newValue;\n        if (typeof event.key === 'string' && event.key.startsWith(colorSchemeStorageKey) && (!value || joinedColorSchemes.match(value))) {\n          // If the key is deleted, value will be null then reset color scheme to the default one.\n          if (event.key.endsWith('light')) {\n            setColorScheme({\n              light: value\n            });\n          }\n          if (event.key.endsWith('dark')) {\n            setColorScheme({\n              dark: value\n            });\n          }\n        }\n        if (event.key === modeStorageKey && (!value || ['light', 'dark', 'system'].includes(value))) {\n          setMode(value || defaultMode);\n        }\n      };\n      // For syncing color-scheme changes between iframes\n      storageWindow.addEventListener('storage', handleStorage);\n      return () => {\n        storageWindow.removeEventListener('storage', handleStorage);\n      };\n    }\n    return undefined;\n  }, [setColorScheme, setMode, modeStorageKey, colorSchemeStorageKey, joinedColorSchemes, defaultMode, storageWindow]);\n  return (0, _extends2.default)({}, state, {\n    colorScheme,\n    setMode,\n    setColorScheme\n  });\n}","map":{"version":3,"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","useCurrentColorScheme","getColorScheme","getSystemMode","_extends2","React","_interopRequireWildcard","_getInitColorSchemeScript","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","has","get","n","__proto__","a","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","mode","window","mql","matchMedia","matches","undefined","processState","state","callback","systemMode","lightColorScheme","darkColorScheme","initializeValue","key","defaultValue","localStorage","getItem","setItem","options","defaultMode","defaultLightColorScheme","defaultDarkColorScheme","supportedColorSchemes","modeStorageKey","DEFAULT_MODE_STORAGE_KEY","colorSchemeStorageKey","DEFAULT_COLOR_SCHEME_STORAGE_KEY","storageWindow","joinedColorSchemes","join","setState","useState","initialMode","colorScheme","setMode","useCallback","currentState","newMode","setColorScheme","includes","console","error","newState","newLightColorScheme","light","newDarkColorScheme","dark","handleMediaQuery","event","mediaListener","useRef","current","useEffect","handler","args","media","addListener","removeListener","handleStorage","newValue","startsWith","match","endsWith","addEventListener","removeEventListener"],"sources":["/Users/enigma/Documents/buildr-frontend/node_modules/@mui/joy/node_modules/@mui/system/node/cssVars/useCurrentColorScheme.js"],"sourcesContent":["\"use strict\";\n'use client';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = useCurrentColorScheme;\nexports.getColorScheme = getColorScheme;\nexports.getSystemMode = getSystemMode;\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _getInitColorSchemeScript = require(\"./getInitColorSchemeScript\");\nfunction _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }\nfunction _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }\nfunction getSystemMode(mode) {\n  if (typeof window !== 'undefined' && mode === 'system') {\n    const mql = window.matchMedia('(prefers-color-scheme: dark)');\n    if (mql.matches) {\n      return 'dark';\n    }\n    return 'light';\n  }\n  return undefined;\n}\nfunction processState(state, callback) {\n  if (state.mode === 'light' || state.mode === 'system' && state.systemMode === 'light') {\n    return callback('light');\n  }\n  if (state.mode === 'dark' || state.mode === 'system' && state.systemMode === 'dark') {\n    return callback('dark');\n  }\n  return undefined;\n}\nfunction getColorScheme(state) {\n  return processState(state, mode => {\n    if (mode === 'light') {\n      return state.lightColorScheme;\n    }\n    if (mode === 'dark') {\n      return state.darkColorScheme;\n    }\n    return undefined;\n  });\n}\nfunction initializeValue(key, defaultValue) {\n  if (typeof window === 'undefined') {\n    return undefined;\n  }\n  let value;\n  try {\n    value = localStorage.getItem(key) || undefined;\n    if (!value) {\n      // the first time that user enters the site.\n      localStorage.setItem(key, defaultValue);\n    }\n  } catch (e) {\n    // Unsupported\n  }\n  return value || defaultValue;\n}\nfunction useCurrentColorScheme(options) {\n  const {\n    defaultMode = 'light',\n    defaultLightColorScheme,\n    defaultDarkColorScheme,\n    supportedColorSchemes = [],\n    modeStorageKey = _getInitColorSchemeScript.DEFAULT_MODE_STORAGE_KEY,\n    colorSchemeStorageKey = _getInitColorSchemeScript.DEFAULT_COLOR_SCHEME_STORAGE_KEY,\n    storageWindow = typeof window === 'undefined' ? undefined : window\n  } = options;\n  const joinedColorSchemes = supportedColorSchemes.join(',');\n  const [state, setState] = React.useState(() => {\n    const initialMode = initializeValue(modeStorageKey, defaultMode);\n    const lightColorScheme = initializeValue(`${colorSchemeStorageKey}-light`, defaultLightColorScheme);\n    const darkColorScheme = initializeValue(`${colorSchemeStorageKey}-dark`, defaultDarkColorScheme);\n    return {\n      mode: initialMode,\n      systemMode: getSystemMode(initialMode),\n      lightColorScheme,\n      darkColorScheme\n    };\n  });\n  const colorScheme = getColorScheme(state);\n  const setMode = React.useCallback(mode => {\n    setState(currentState => {\n      if (mode === currentState.mode) {\n        // do nothing if mode does not change\n        return currentState;\n      }\n      const newMode = mode != null ? mode : defaultMode;\n      try {\n        localStorage.setItem(modeStorageKey, newMode);\n      } catch (e) {\n        // Unsupported\n      }\n      return (0, _extends2.default)({}, currentState, {\n        mode: newMode,\n        systemMode: getSystemMode(newMode)\n      });\n    });\n  }, [modeStorageKey, defaultMode]);\n  const setColorScheme = React.useCallback(value => {\n    if (!value) {\n      setState(currentState => {\n        try {\n          localStorage.setItem(`${colorSchemeStorageKey}-light`, defaultLightColorScheme);\n          localStorage.setItem(`${colorSchemeStorageKey}-dark`, defaultDarkColorScheme);\n        } catch (e) {\n          // Unsupported\n        }\n        return (0, _extends2.default)({}, currentState, {\n          lightColorScheme: defaultLightColorScheme,\n          darkColorScheme: defaultDarkColorScheme\n        });\n      });\n    } else if (typeof value === 'string') {\n      if (value && !joinedColorSchemes.includes(value)) {\n        console.error(`\\`${value}\\` does not exist in \\`theme.colorSchemes\\`.`);\n      } else {\n        setState(currentState => {\n          const newState = (0, _extends2.default)({}, currentState);\n          processState(currentState, mode => {\n            try {\n              localStorage.setItem(`${colorSchemeStorageKey}-${mode}`, value);\n            } catch (e) {\n              // Unsupported\n            }\n            if (mode === 'light') {\n              newState.lightColorScheme = value;\n            }\n            if (mode === 'dark') {\n              newState.darkColorScheme = value;\n            }\n          });\n          return newState;\n        });\n      }\n    } else {\n      setState(currentState => {\n        const newState = (0, _extends2.default)({}, currentState);\n        const newLightColorScheme = value.light === null ? defaultLightColorScheme : value.light;\n        const newDarkColorScheme = value.dark === null ? defaultDarkColorScheme : value.dark;\n        if (newLightColorScheme) {\n          if (!joinedColorSchemes.includes(newLightColorScheme)) {\n            console.error(`\\`${newLightColorScheme}\\` does not exist in \\`theme.colorSchemes\\`.`);\n          } else {\n            newState.lightColorScheme = newLightColorScheme;\n            try {\n              localStorage.setItem(`${colorSchemeStorageKey}-light`, newLightColorScheme);\n            } catch (error) {\n              // Unsupported\n            }\n          }\n        }\n        if (newDarkColorScheme) {\n          if (!joinedColorSchemes.includes(newDarkColorScheme)) {\n            console.error(`\\`${newDarkColorScheme}\\` does not exist in \\`theme.colorSchemes\\`.`);\n          } else {\n            newState.darkColorScheme = newDarkColorScheme;\n            try {\n              localStorage.setItem(`${colorSchemeStorageKey}-dark`, newDarkColorScheme);\n            } catch (error) {\n              // Unsupported\n            }\n          }\n        }\n        return newState;\n      });\n    }\n  }, [joinedColorSchemes, colorSchemeStorageKey, defaultLightColorScheme, defaultDarkColorScheme]);\n  const handleMediaQuery = React.useCallback(event => {\n    if (state.mode === 'system') {\n      setState(currentState => {\n        const systemMode = event != null && event.matches ? 'dark' : 'light';\n\n        // Early exit, nothing changed.\n        if (currentState.systemMode === systemMode) {\n          return currentState;\n        }\n        return (0, _extends2.default)({}, currentState, {\n          systemMode\n        });\n      });\n    }\n  }, [state.mode]);\n\n  // Ref hack to avoid adding handleMediaQuery as a dep\n  const mediaListener = React.useRef(handleMediaQuery);\n  mediaListener.current = handleMediaQuery;\n  React.useEffect(() => {\n    const handler = (...args) => mediaListener.current(...args);\n\n    // Always listen to System preference\n    const media = window.matchMedia('(prefers-color-scheme: dark)');\n\n    // Intentionally use deprecated listener methods to support iOS & old browsers\n    media.addListener(handler);\n    handler(media);\n    return () => {\n      media.removeListener(handler);\n    };\n  }, []);\n\n  // Handle when localStorage has changed\n  React.useEffect(() => {\n    if (storageWindow) {\n      const handleStorage = event => {\n        const value = event.newValue;\n        if (typeof event.key === 'string' && event.key.startsWith(colorSchemeStorageKey) && (!value || joinedColorSchemes.match(value))) {\n          // If the key is deleted, value will be null then reset color scheme to the default one.\n          if (event.key.endsWith('light')) {\n            setColorScheme({\n              light: value\n            });\n          }\n          if (event.key.endsWith('dark')) {\n            setColorScheme({\n              dark: value\n            });\n          }\n        }\n        if (event.key === modeStorageKey && (!value || ['light', 'dark', 'system'].includes(value))) {\n          setMode(value || defaultMode);\n        }\n      };\n      // For syncing color-scheme changes between iframes\n      storageWindow.addEventListener('storage', handleStorage);\n      return () => {\n        storageWindow.removeEventListener('storage', handleStorage);\n      };\n    }\n    return undefined;\n  }, [setColorScheme, setMode, modeStorageKey, colorSchemeStorageKey, joinedColorSchemes, defaultMode, storageWindow]);\n  return (0, _extends2.default)({}, state, {\n    colorScheme,\n    setMode,\n    setColorScheme\n  });\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}