{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar _toPropertyKey2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toPropertyKey\"));\nvar _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutPropertiesLoose\"));\nvar _deepmerge = _interopRequireDefault(require(\"@mui/utils/deepmerge\"));\nvar _cssVarsParser = _interopRequireDefault(require(\"./cssVarsParser\"));\nconst _excluded = [\"getSelector\"],\n  _excluded2 = [\"colorSchemes\", \"components\", \"defaultColorScheme\"];\nfunction prepareCssVars(theme, _ref = {}) {\n  let {\n      getSelector\n    } = _ref,\n    parserConfig = (0, _objectWithoutPropertiesLoose2.default)(_ref, _excluded);\n  // @ts-ignore - ignore components do not exist\n  const {\n      colorSchemes = {},\n      defaultColorScheme = 'light'\n    } = theme,\n    otherTheme = (0, _objectWithoutPropertiesLoose2.default)(theme, _excluded2);\n  const {\n    vars: rootVars,\n    css: rootCss,\n    varsWithDefaults: rootVarsWithDefaults\n  } = (0, _cssVarsParser.default)(otherTheme, parserConfig);\n  let themeVars = rootVarsWithDefaults;\n  const colorSchemesMap = {};\n  const {\n      [defaultColorScheme]: defaultScheme\n    } = colorSchemes,\n    otherColorSchemes = (0, _objectWithoutPropertiesLoose2.default)(colorSchemes, [defaultColorScheme].map(_toPropertyKey2.default));\n  Object.entries(otherColorSchemes || {}).forEach(([key, scheme]) => {\n    const {\n      vars,\n      css,\n      varsWithDefaults\n    } = (0, _cssVarsParser.default)(scheme, parserConfig);\n    themeVars = (0, _deepmerge.default)(themeVars, varsWithDefaults);\n    colorSchemesMap[key] = {\n      css,\n      vars\n    };\n  });\n  if (defaultScheme) {\n    // default color scheme vars should be merged last to set as default\n    const {\n      css,\n      vars,\n      varsWithDefaults\n    } = (0, _cssVarsParser.default)(defaultScheme, parserConfig);\n    themeVars = (0, _deepmerge.default)(themeVars, varsWithDefaults);\n    colorSchemesMap[defaultColorScheme] = {\n      css,\n      vars\n    };\n  }\n  const generateThemeVars = () => {\n    let vars = (0, _extends2.default)({}, rootVars);\n    Object.entries(colorSchemesMap).forEach(([, {\n      vars: schemeVars\n    }]) => {\n      vars = (0, _deepmerge.default)(vars, schemeVars);\n    });\n    return vars;\n  };\n  const generateStyleSheets = () => {\n    const stylesheets = [];\n    const colorScheme = theme.defaultColorScheme || 'light';\n    function insertStyleSheet(selector, css) {\n      if (Object.keys(css).length) {\n        stylesheets.push(typeof selector === 'string' ? {\n          [selector]: (0, _extends2.default)({}, css)\n        } : selector);\n      }\n    }\n    insertStyleSheet((getSelector == null ? void 0 : getSelector(undefined, (0, _extends2.default)({}, rootCss))) || ':root', rootCss);\n    const {\n        [colorScheme]: defaultSchemeVal\n      } = colorSchemesMap,\n      rest = (0, _objectWithoutPropertiesLoose2.default)(colorSchemesMap, [colorScheme].map(_toPropertyKey2.default));\n    if (defaultSchemeVal) {\n      // default color scheme has to come before other color schemes\n      const {\n        css\n      } = defaultSchemeVal;\n      insertStyleSheet((getSelector == null ? void 0 : getSelector(colorScheme, (0, _extends2.default)({}, css))) || `[${theme.attribute || 'data-color-scheme'}=\"${colorScheme}\"]`, css);\n    }\n    Object.entries(rest).forEach(([key, {\n      css\n    }]) => {\n      insertStyleSheet((getSelector == null ? void 0 : getSelector(key, (0, _extends2.default)({}, css))) || `[${theme.attribute || 'data-color-scheme'}=\"${key}\"]`, css);\n    });\n    return stylesheets;\n  };\n  return {\n    vars: themeVars,\n    generateThemeVars,\n    generateStyleSheets\n  };\n}\nvar _default = exports.default = prepareCssVars;","map":{"version":3,"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_extends2","_toPropertyKey2","_objectWithoutPropertiesLoose2","_deepmerge","_cssVarsParser","_excluded","_excluded2","prepareCssVars","theme","_ref","getSelector","parserConfig","colorSchemes","defaultColorScheme","otherTheme","vars","rootVars","css","rootCss","varsWithDefaults","rootVarsWithDefaults","themeVars","colorSchemesMap","defaultScheme","otherColorSchemes","map","entries","forEach","key","scheme","generateThemeVars","schemeVars","generateStyleSheets","stylesheets","colorScheme","insertStyleSheet","selector","keys","length","push","undefined","defaultSchemeVal","rest","attribute","_default"],"sources":["/Users/enigma/Documents/buildr-frontend/node_modules/@mui/joy/node_modules/@mui/system/node/cssVars/prepareCssVars.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar _toPropertyKey2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toPropertyKey\"));\nvar _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutPropertiesLoose\"));\nvar _deepmerge = _interopRequireDefault(require(\"@mui/utils/deepmerge\"));\nvar _cssVarsParser = _interopRequireDefault(require(\"./cssVarsParser\"));\nconst _excluded = [\"getSelector\"],\n  _excluded2 = [\"colorSchemes\", \"components\", \"defaultColorScheme\"];\nfunction prepareCssVars(theme, _ref = {}) {\n  let {\n      getSelector\n    } = _ref,\n    parserConfig = (0, _objectWithoutPropertiesLoose2.default)(_ref, _excluded);\n  // @ts-ignore - ignore components do not exist\n  const {\n      colorSchemes = {},\n      defaultColorScheme = 'light'\n    } = theme,\n    otherTheme = (0, _objectWithoutPropertiesLoose2.default)(theme, _excluded2);\n  const {\n    vars: rootVars,\n    css: rootCss,\n    varsWithDefaults: rootVarsWithDefaults\n  } = (0, _cssVarsParser.default)(otherTheme, parserConfig);\n  let themeVars = rootVarsWithDefaults;\n  const colorSchemesMap = {};\n  const {\n      [defaultColorScheme]: defaultScheme\n    } = colorSchemes,\n    otherColorSchemes = (0, _objectWithoutPropertiesLoose2.default)(colorSchemes, [defaultColorScheme].map(_toPropertyKey2.default));\n  Object.entries(otherColorSchemes || {}).forEach(([key, scheme]) => {\n    const {\n      vars,\n      css,\n      varsWithDefaults\n    } = (0, _cssVarsParser.default)(scheme, parserConfig);\n    themeVars = (0, _deepmerge.default)(themeVars, varsWithDefaults);\n    colorSchemesMap[key] = {\n      css,\n      vars\n    };\n  });\n  if (defaultScheme) {\n    // default color scheme vars should be merged last to set as default\n    const {\n      css,\n      vars,\n      varsWithDefaults\n    } = (0, _cssVarsParser.default)(defaultScheme, parserConfig);\n    themeVars = (0, _deepmerge.default)(themeVars, varsWithDefaults);\n    colorSchemesMap[defaultColorScheme] = {\n      css,\n      vars\n    };\n  }\n  const generateThemeVars = () => {\n    let vars = (0, _extends2.default)({}, rootVars);\n    Object.entries(colorSchemesMap).forEach(([, {\n      vars: schemeVars\n    }]) => {\n      vars = (0, _deepmerge.default)(vars, schemeVars);\n    });\n    return vars;\n  };\n  const generateStyleSheets = () => {\n    const stylesheets = [];\n    const colorScheme = theme.defaultColorScheme || 'light';\n    function insertStyleSheet(selector, css) {\n      if (Object.keys(css).length) {\n        stylesheets.push(typeof selector === 'string' ? {\n          [selector]: (0, _extends2.default)({}, css)\n        } : selector);\n      }\n    }\n    insertStyleSheet((getSelector == null ? void 0 : getSelector(undefined, (0, _extends2.default)({}, rootCss))) || ':root', rootCss);\n    const {\n        [colorScheme]: defaultSchemeVal\n      } = colorSchemesMap,\n      rest = (0, _objectWithoutPropertiesLoose2.default)(colorSchemesMap, [colorScheme].map(_toPropertyKey2.default));\n    if (defaultSchemeVal) {\n      // default color scheme has to come before other color schemes\n      const {\n        css\n      } = defaultSchemeVal;\n      insertStyleSheet((getSelector == null ? void 0 : getSelector(colorScheme, (0, _extends2.default)({}, css))) || `[${theme.attribute || 'data-color-scheme'}=\"${colorScheme}\"]`, css);\n    }\n    Object.entries(rest).forEach(([key, {\n      css\n    }]) => {\n      insertStyleSheet((getSelector == null ? void 0 : getSelector(key, (0, _extends2.default)({}, css))) || `[${theme.attribute || 'data-color-scheme'}=\"${key}\"]`, css);\n    });\n    return stylesheets;\n  };\n  return {\n    vars: themeVars,\n    generateThemeVars,\n    generateStyleSheets\n  };\n}\nvar _default = exports.default = prepareCssVars;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}