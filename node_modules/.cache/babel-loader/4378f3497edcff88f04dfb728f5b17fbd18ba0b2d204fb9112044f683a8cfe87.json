{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DISABLE_CSS_TRANSITION = void 0;\nexports.default = createCssVarsProvider;\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutPropertiesLoose\"));\nvar _formatMuiErrorMessage2 = _interopRequireDefault(require(\"@mui/utils/formatMuiErrorMessage\"));\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\nvar _styledEngine = require(\"@mui/styled-engine\");\nvar _privateTheming = require(\"@mui/private-theming\");\nvar _ThemeProvider = _interopRequireDefault(require(\"../ThemeProvider\"));\nvar _getInitColorSchemeScript = _interopRequireWildcard(require(\"./getInitColorSchemeScript\"));\nvar _useCurrentColorScheme = _interopRequireDefault(require(\"./useCurrentColorScheme\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nconst _excluded = [\"colorSchemes\", \"components\", \"cssVarPrefix\"];\nfunction _getRequireWildcardCache(e) {\n  if (\"function\" != typeof WeakMap) return null;\n  var r = new WeakMap(),\n    t = new WeakMap();\n  return (_getRequireWildcardCache = function (e) {\n    return e ? t : r;\n  })(e);\n}\nfunction _interopRequireWildcard(e, r) {\n  if (!r && e && e.__esModule) return e;\n  if (null === e || \"object\" != typeof e && \"function\" != typeof e) return {\n    default: e\n  };\n  var t = _getRequireWildcardCache(r);\n  if (t && t.has(e)) return t.get(e);\n  var n = {\n      __proto__: null\n    },\n    a = Object.defineProperty && Object.getOwnPropertyDescriptor;\n  for (var u in e) if (\"default\" !== u && {}.hasOwnProperty.call(e, u)) {\n    var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;\n    i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];\n  }\n  return n.default = e, t && t.set(e, n), n;\n}\nconst DISABLE_CSS_TRANSITION = exports.DISABLE_CSS_TRANSITION = '*{-webkit-transition:none!important;-moz-transition:none!important;-o-transition:none!important;-ms-transition:none!important;transition:none!important}';\nfunction createCssVarsProvider(options) {\n  const {\n    themeId,\n    /**\n     * This `theme` object needs to follow a certain structure to\n     * be used correctly by the finel `CssVarsProvider`. It should have a\n     * `colorSchemes` key with the light and dark (and any other) palette.\n     * It should also ideally have a vars object created using `prepareCssVars`.\n     */\n    theme: defaultTheme = {},\n    attribute: defaultAttribute = _getInitColorSchemeScript.DEFAULT_ATTRIBUTE,\n    modeStorageKey: defaultModeStorageKey = _getInitColorSchemeScript.DEFAULT_MODE_STORAGE_KEY,\n    colorSchemeStorageKey: defaultColorSchemeStorageKey = _getInitColorSchemeScript.DEFAULT_COLOR_SCHEME_STORAGE_KEY,\n    defaultMode: designSystemMode = 'light',\n    defaultColorScheme: designSystemColorScheme,\n    disableTransitionOnChange: designSystemTransitionOnChange = false,\n    resolveTheme\n  } = options;\n  if (!defaultTheme.colorSchemes || typeof designSystemColorScheme === 'string' && !defaultTheme.colorSchemes[designSystemColorScheme] || typeof designSystemColorScheme === 'object' && !defaultTheme.colorSchemes[designSystemColorScheme == null ? void 0 : designSystemColorScheme.light] || typeof designSystemColorScheme === 'object' && !defaultTheme.colorSchemes[designSystemColorScheme == null ? void 0 : designSystemColorScheme.dark]) {\n    console.error(`MUI: \\`${designSystemColorScheme}\\` does not exist in \\`theme.colorSchemes\\`.`);\n  }\n  const ColorSchemeContext = /*#__PURE__*/React.createContext(undefined);\n  if (process.env.NODE_ENV !== 'production') {\n    ColorSchemeContext.displayName = 'ColorSchemeContext';\n  }\n  const useColorScheme = () => {\n    const value = React.useContext(ColorSchemeContext);\n    if (!value) {\n      throw new Error(process.env.NODE_ENV !== \"production\" ? `MUI: \\`useColorScheme\\` must be called under <CssVarsProvider />` : (0, _formatMuiErrorMessage2.default)(19));\n    }\n    return value;\n  };\n  function CssVarsProvider(props) {\n    var _restThemeProp$genera, _theme$generateStyleS;\n    const {\n      children,\n      theme: themeProp = defaultTheme,\n      modeStorageKey = defaultModeStorageKey,\n      colorSchemeStorageKey = defaultColorSchemeStorageKey,\n      attribute = defaultAttribute,\n      defaultMode = designSystemMode,\n      defaultColorScheme = designSystemColorScheme,\n      disableTransitionOnChange = designSystemTransitionOnChange,\n      storageWindow = typeof window === 'undefined' ? undefined : window,\n      documentNode = typeof document === 'undefined' ? undefined : document,\n      colorSchemeNode = typeof document === 'undefined' ? undefined : document.documentElement,\n      colorSchemeSelector = ':root',\n      disableNestedContext = false,\n      disableStyleSheetGeneration = false\n    } = props;\n    const hasMounted = React.useRef(false);\n    const upperTheme = (0, _privateTheming.useTheme)();\n    const ctx = React.useContext(ColorSchemeContext);\n    const nested = !!ctx && !disableNestedContext;\n    const scopedTheme = themeProp[themeId];\n    const _ref = scopedTheme || themeProp,\n      {\n        colorSchemes = {},\n        components = {},\n        cssVarPrefix\n      } = _ref,\n      restThemeProp = (0, _objectWithoutPropertiesLoose2.default)(_ref, _excluded);\n    const allColorSchemes = Object.keys(colorSchemes);\n    const defaultLightColorScheme = typeof defaultColorScheme === 'string' ? defaultColorScheme : defaultColorScheme.light;\n    const defaultDarkColorScheme = typeof defaultColorScheme === 'string' ? defaultColorScheme : defaultColorScheme.dark;\n\n    // 1. Get the data about the `mode`, `colorScheme`, and setter functions.\n    const {\n      mode: stateMode,\n      setMode,\n      systemMode,\n      lightColorScheme,\n      darkColorScheme,\n      colorScheme: stateColorScheme,\n      setColorScheme\n    } = (0, _useCurrentColorScheme.default)({\n      supportedColorSchemes: allColorSchemes,\n      defaultLightColorScheme,\n      defaultDarkColorScheme,\n      modeStorageKey,\n      colorSchemeStorageKey,\n      defaultMode,\n      storageWindow\n    });\n    let mode = stateMode;\n    let colorScheme = stateColorScheme;\n    if (nested) {\n      mode = ctx.mode;\n      colorScheme = ctx.colorScheme;\n    }\n    const calculatedMode = (() => {\n      if (mode) {\n        return mode;\n      }\n      // This scope occurs on the server\n      if (defaultMode === 'system') {\n        return designSystemMode;\n      }\n      return defaultMode;\n    })();\n    const calculatedColorScheme = (() => {\n      if (!colorScheme) {\n        // This scope occurs on the server\n        if (calculatedMode === 'dark') {\n          return defaultDarkColorScheme;\n        }\n        // use light color scheme, if default mode is 'light' | 'system'\n        return defaultLightColorScheme;\n      }\n      return colorScheme;\n    })();\n\n    // 2. get the `vars` object that refers to the CSS custom properties\n    const themeVars = ((_restThemeProp$genera = restThemeProp.generateThemeVars) == null ? void 0 : _restThemeProp$genera.call(restThemeProp)) || restThemeProp.vars;\n\n    // 3. Start composing the theme object\n    const theme = (0, _extends2.default)({}, restThemeProp, {\n      components,\n      colorSchemes,\n      cssVarPrefix,\n      vars: themeVars\n    });\n    if (typeof theme.generateSpacing === 'function') {\n      theme.spacing = theme.generateSpacing();\n    }\n\n    // 4. Resolve the color scheme and merge it to the theme\n    Object.entries(colorSchemes).forEach(([key, scheme]) => {\n      if (key === calculatedColorScheme) {\n        // 4.1 Merge the selected color scheme to the theme\n        Object.keys(scheme).forEach(schemeKey => {\n          if (scheme[schemeKey] && typeof scheme[schemeKey] === 'object') {\n            // shallow merge the 1st level structure of the theme.\n            theme[schemeKey] = (0, _extends2.default)({}, theme[schemeKey], scheme[schemeKey]);\n          } else {\n            theme[schemeKey] = scheme[schemeKey];\n          }\n        });\n        if (theme.palette) {\n          theme.palette.colorScheme = key;\n        }\n      }\n    });\n    const resolvedDefaultColorScheme = (() => {\n      if (typeof defaultColorScheme === 'string') {\n        return defaultColorScheme;\n      }\n      if (defaultMode === 'dark') {\n        return defaultColorScheme.dark;\n      }\n      return defaultColorScheme.light;\n    })();\n    themeProp.defaultColorScheme = resolvedDefaultColorScheme;\n    themeProp.colorSchemeSelector = colorSchemeSelector;\n    themeProp.attribute = attribute;\n    if (!theme.getColorSchemeSelector) {\n      theme.getColorSchemeSelector = targetColorScheme => `[${attribute}=\"${targetColorScheme}\"] &`;\n    }\n\n    // 5. Declaring effects\n    // 5.1 Updates the selector value to use the current color scheme which tells CSS to use the proper stylesheet.\n    React.useEffect(() => {\n      if (colorScheme && colorSchemeNode) {\n        // attaches attribute to <html> because the css variables are attached to :root (html)\n        colorSchemeNode.setAttribute(attribute, colorScheme);\n      }\n    }, [colorScheme, attribute, colorSchemeNode]);\n\n    // 5.2 Remove the CSS transition when color scheme changes to create instant experience.\n    // credit: https://github.com/pacocoursey/next-themes/blob/b5c2bad50de2d61ad7b52a9c5cdc801a78507d7a/index.tsx#L313\n    React.useEffect(() => {\n      let timer;\n      if (disableTransitionOnChange && hasMounted.current && documentNode) {\n        const css = documentNode.createElement('style');\n        css.appendChild(documentNode.createTextNode(DISABLE_CSS_TRANSITION));\n        documentNode.head.appendChild(css);\n\n        // Force browser repaint\n        (() => window.getComputedStyle(documentNode.body))();\n        timer = setTimeout(() => {\n          documentNode.head.removeChild(css);\n        }, 1);\n      }\n      return () => {\n        clearTimeout(timer);\n      };\n    }, [colorScheme, disableTransitionOnChange, documentNode]);\n    React.useEffect(() => {\n      hasMounted.current = true;\n      return () => {\n        hasMounted.current = false;\n      };\n    }, []);\n    const contextValue = React.useMemo(() => ({\n      allColorSchemes,\n      colorScheme,\n      darkColorScheme,\n      lightColorScheme,\n      mode,\n      setColorScheme,\n      setMode,\n      systemMode\n    }), [allColorSchemes, colorScheme, darkColorScheme, lightColorScheme, mode, setColorScheme, setMode, systemMode]);\n    let shouldGenerateStyleSheet = true;\n    if (disableStyleSheetGeneration || nested && (upperTheme == null ? void 0 : upperTheme.cssVarPrefix) === cssVarPrefix) {\n      shouldGenerateStyleSheet = false;\n    }\n    const element = /*#__PURE__*/(0, _jsxRuntime.jsxs)(React.Fragment, {\n      children: [shouldGenerateStyleSheet && /*#__PURE__*/(0, _jsxRuntime.jsx)(React.Fragment, {\n        children: (((_theme$generateStyleS = theme.generateStyleSheets) == null ? void 0 : _theme$generateStyleS.call(theme)) || []).map((styles, index) => /*#__PURE__*/(0, _jsxRuntime.jsx)(_styledEngine.GlobalStyles, {\n          styles: styles\n        }, index))\n      }), /*#__PURE__*/(0, _jsxRuntime.jsx)(_ThemeProvider.default, {\n        themeId: scopedTheme ? themeId : undefined,\n        theme: resolveTheme ? resolveTheme(theme) : theme,\n        children: children\n      })]\n    });\n    if (nested) {\n      return element;\n    }\n    return /*#__PURE__*/(0, _jsxRuntime.jsx)(ColorSchemeContext.Provider, {\n      value: contextValue,\n      children: element\n    });\n  }\n  process.env.NODE_ENV !== \"production\" ? CssVarsProvider.propTypes = {\n    /**\n     * The body attribute name to attach colorScheme.\n     */\n    attribute: _propTypes.default.string,\n    /**\n     * The component tree.\n     */\n    children: _propTypes.default.node,\n    /**\n     * The node used to attach the color-scheme attribute\n     */\n    colorSchemeNode: _propTypes.default.any,\n    /**\n     * The CSS selector for attaching the generated custom properties\n     */\n    colorSchemeSelector: _propTypes.default.string,\n    /**\n     * localStorage key used to store `colorScheme`\n     */\n    colorSchemeStorageKey: _propTypes.default.string,\n    /**\n     * The initial color scheme used.\n     */\n    defaultColorScheme: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.object]),\n    /**\n     * The initial mode used.\n     */\n    defaultMode: _propTypes.default.string,\n    /**\n     * If `true`, the provider creates its own context and generate stylesheet as if it is a root `CssVarsProvider`.\n     */\n    disableNestedContext: _propTypes.default.bool,\n    /**\n     * If `true`, the style sheet won't be generated.\n     *\n     * This is useful for controlling nested CssVarsProvider behavior.\n     */\n    disableStyleSheetGeneration: _propTypes.default.bool,\n    /**\n     * Disable CSS transitions when switching between modes or color schemes.\n     */\n    disableTransitionOnChange: _propTypes.default.bool,\n    /**\n     * The document to attach the attribute to.\n     */\n    documentNode: _propTypes.default.any,\n    /**\n     * The key in the local storage used to store current color scheme.\n     */\n    modeStorageKey: _propTypes.default.string,\n    /**\n     * The window that attaches the 'storage' event listener.\n     * @default window\n     */\n    storageWindow: _propTypes.default.any,\n    /**\n     * The calculated theme object that will be passed through context.\n     */\n    theme: _propTypes.default.object\n  } : void 0;\n  const defaultLightColorScheme = typeof designSystemColorScheme === 'string' ? designSystemColorScheme : designSystemColorScheme.light;\n  const defaultDarkColorScheme = typeof designSystemColorScheme === 'string' ? designSystemColorScheme : designSystemColorScheme.dark;\n  const getInitColorSchemeScript = params => (0, _getInitColorSchemeScript.default)((0, _extends2.default)({\n    attribute: defaultAttribute,\n    colorSchemeStorageKey: defaultColorSchemeStorageKey,\n    defaultMode: designSystemMode,\n    defaultLightColorScheme,\n    defaultDarkColorScheme,\n    modeStorageKey: defaultModeStorageKey\n  }, params));\n  return {\n    CssVarsProvider,\n    useColorScheme,\n    getInitColorSchemeScript\n  };\n}","map":{"version":3,"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","DISABLE_CSS_TRANSITION","default","createCssVarsProvider","_extends2","_objectWithoutPropertiesLoose2","_formatMuiErrorMessage2","React","_interopRequireWildcard","_propTypes","_styledEngine","_privateTheming","_ThemeProvider","_getInitColorSchemeScript","_useCurrentColorScheme","_jsxRuntime","_excluded","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","has","get","n","__proto__","a","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","options","themeId","theme","defaultTheme","attribute","defaultAttribute","DEFAULT_ATTRIBUTE","modeStorageKey","defaultModeStorageKey","DEFAULT_MODE_STORAGE_KEY","colorSchemeStorageKey","defaultColorSchemeStorageKey","DEFAULT_COLOR_SCHEME_STORAGE_KEY","defaultMode","designSystemMode","defaultColorScheme","designSystemColorScheme","disableTransitionOnChange","designSystemTransitionOnChange","resolveTheme","colorSchemes","light","dark","console","error","ColorSchemeContext","createContext","undefined","process","env","NODE_ENV","displayName","useColorScheme","useContext","Error","CssVarsProvider","props","_restThemeProp$genera","_theme$generateStyleS","children","themeProp","storageWindow","window","documentNode","document","colorSchemeNode","documentElement","colorSchemeSelector","disableNestedContext","disableStyleSheetGeneration","hasMounted","useRef","upperTheme","useTheme","ctx","nested","scopedTheme","_ref","components","cssVarPrefix","restThemeProp","allColorSchemes","keys","defaultLightColorScheme","defaultDarkColorScheme","mode","stateMode","setMode","systemMode","lightColorScheme","darkColorScheme","colorScheme","stateColorScheme","setColorScheme","supportedColorSchemes","calculatedMode","calculatedColorScheme","themeVars","generateThemeVars","vars","generateSpacing","spacing","entries","forEach","key","scheme","schemeKey","palette","resolvedDefaultColorScheme","getColorSchemeSelector","targetColorScheme","useEffect","setAttribute","timer","current","css","createElement","appendChild","createTextNode","head","getComputedStyle","body","setTimeout","removeChild","clearTimeout","contextValue","useMemo","shouldGenerateStyleSheet","element","jsxs","Fragment","jsx","generateStyleSheets","map","styles","index","GlobalStyles","Provider","propTypes","string","node","any","oneOfType","object","bool","getInitColorSchemeScript","params"],"sources":["/Users/enigma/Documents/buildr-frontend/node_modules/@mui/joy/node_modules/@mui/system/node/cssVars/createCssVarsProvider.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DISABLE_CSS_TRANSITION = void 0;\nexports.default = createCssVarsProvider;\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutPropertiesLoose\"));\nvar _formatMuiErrorMessage2 = _interopRequireDefault(require(\"@mui/utils/formatMuiErrorMessage\"));\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\nvar _styledEngine = require(\"@mui/styled-engine\");\nvar _privateTheming = require(\"@mui/private-theming\");\nvar _ThemeProvider = _interopRequireDefault(require(\"../ThemeProvider\"));\nvar _getInitColorSchemeScript = _interopRequireWildcard(require(\"./getInitColorSchemeScript\"));\nvar _useCurrentColorScheme = _interopRequireDefault(require(\"./useCurrentColorScheme\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nconst _excluded = [\"colorSchemes\", \"components\", \"cssVarPrefix\"];\nfunction _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }\nfunction _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }\nconst DISABLE_CSS_TRANSITION = exports.DISABLE_CSS_TRANSITION = '*{-webkit-transition:none!important;-moz-transition:none!important;-o-transition:none!important;-ms-transition:none!important;transition:none!important}';\nfunction createCssVarsProvider(options) {\n  const {\n    themeId,\n    /**\n     * This `theme` object needs to follow a certain structure to\n     * be used correctly by the finel `CssVarsProvider`. It should have a\n     * `colorSchemes` key with the light and dark (and any other) palette.\n     * It should also ideally have a vars object created using `prepareCssVars`.\n     */\n    theme: defaultTheme = {},\n    attribute: defaultAttribute = _getInitColorSchemeScript.DEFAULT_ATTRIBUTE,\n    modeStorageKey: defaultModeStorageKey = _getInitColorSchemeScript.DEFAULT_MODE_STORAGE_KEY,\n    colorSchemeStorageKey: defaultColorSchemeStorageKey = _getInitColorSchemeScript.DEFAULT_COLOR_SCHEME_STORAGE_KEY,\n    defaultMode: designSystemMode = 'light',\n    defaultColorScheme: designSystemColorScheme,\n    disableTransitionOnChange: designSystemTransitionOnChange = false,\n    resolveTheme\n  } = options;\n  if (!defaultTheme.colorSchemes || typeof designSystemColorScheme === 'string' && !defaultTheme.colorSchemes[designSystemColorScheme] || typeof designSystemColorScheme === 'object' && !defaultTheme.colorSchemes[designSystemColorScheme == null ? void 0 : designSystemColorScheme.light] || typeof designSystemColorScheme === 'object' && !defaultTheme.colorSchemes[designSystemColorScheme == null ? void 0 : designSystemColorScheme.dark]) {\n    console.error(`MUI: \\`${designSystemColorScheme}\\` does not exist in \\`theme.colorSchemes\\`.`);\n  }\n  const ColorSchemeContext = /*#__PURE__*/React.createContext(undefined);\n  if (process.env.NODE_ENV !== 'production') {\n    ColorSchemeContext.displayName = 'ColorSchemeContext';\n  }\n  const useColorScheme = () => {\n    const value = React.useContext(ColorSchemeContext);\n    if (!value) {\n      throw new Error(process.env.NODE_ENV !== \"production\" ? `MUI: \\`useColorScheme\\` must be called under <CssVarsProvider />` : (0, _formatMuiErrorMessage2.default)(19));\n    }\n    return value;\n  };\n  function CssVarsProvider(props) {\n    var _restThemeProp$genera, _theme$generateStyleS;\n    const {\n      children,\n      theme: themeProp = defaultTheme,\n      modeStorageKey = defaultModeStorageKey,\n      colorSchemeStorageKey = defaultColorSchemeStorageKey,\n      attribute = defaultAttribute,\n      defaultMode = designSystemMode,\n      defaultColorScheme = designSystemColorScheme,\n      disableTransitionOnChange = designSystemTransitionOnChange,\n      storageWindow = typeof window === 'undefined' ? undefined : window,\n      documentNode = typeof document === 'undefined' ? undefined : document,\n      colorSchemeNode = typeof document === 'undefined' ? undefined : document.documentElement,\n      colorSchemeSelector = ':root',\n      disableNestedContext = false,\n      disableStyleSheetGeneration = false\n    } = props;\n    const hasMounted = React.useRef(false);\n    const upperTheme = (0, _privateTheming.useTheme)();\n    const ctx = React.useContext(ColorSchemeContext);\n    const nested = !!ctx && !disableNestedContext;\n    const scopedTheme = themeProp[themeId];\n    const _ref = scopedTheme || themeProp,\n      {\n        colorSchemes = {},\n        components = {},\n        cssVarPrefix\n      } = _ref,\n      restThemeProp = (0, _objectWithoutPropertiesLoose2.default)(_ref, _excluded);\n    const allColorSchemes = Object.keys(colorSchemes);\n    const defaultLightColorScheme = typeof defaultColorScheme === 'string' ? defaultColorScheme : defaultColorScheme.light;\n    const defaultDarkColorScheme = typeof defaultColorScheme === 'string' ? defaultColorScheme : defaultColorScheme.dark;\n\n    // 1. Get the data about the `mode`, `colorScheme`, and setter functions.\n    const {\n      mode: stateMode,\n      setMode,\n      systemMode,\n      lightColorScheme,\n      darkColorScheme,\n      colorScheme: stateColorScheme,\n      setColorScheme\n    } = (0, _useCurrentColorScheme.default)({\n      supportedColorSchemes: allColorSchemes,\n      defaultLightColorScheme,\n      defaultDarkColorScheme,\n      modeStorageKey,\n      colorSchemeStorageKey,\n      defaultMode,\n      storageWindow\n    });\n    let mode = stateMode;\n    let colorScheme = stateColorScheme;\n    if (nested) {\n      mode = ctx.mode;\n      colorScheme = ctx.colorScheme;\n    }\n    const calculatedMode = (() => {\n      if (mode) {\n        return mode;\n      }\n      // This scope occurs on the server\n      if (defaultMode === 'system') {\n        return designSystemMode;\n      }\n      return defaultMode;\n    })();\n    const calculatedColorScheme = (() => {\n      if (!colorScheme) {\n        // This scope occurs on the server\n        if (calculatedMode === 'dark') {\n          return defaultDarkColorScheme;\n        }\n        // use light color scheme, if default mode is 'light' | 'system'\n        return defaultLightColorScheme;\n      }\n      return colorScheme;\n    })();\n\n    // 2. get the `vars` object that refers to the CSS custom properties\n    const themeVars = ((_restThemeProp$genera = restThemeProp.generateThemeVars) == null ? void 0 : _restThemeProp$genera.call(restThemeProp)) || restThemeProp.vars;\n\n    // 3. Start composing the theme object\n    const theme = (0, _extends2.default)({}, restThemeProp, {\n      components,\n      colorSchemes,\n      cssVarPrefix,\n      vars: themeVars\n    });\n    if (typeof theme.generateSpacing === 'function') {\n      theme.spacing = theme.generateSpacing();\n    }\n\n    // 4. Resolve the color scheme and merge it to the theme\n    Object.entries(colorSchemes).forEach(([key, scheme]) => {\n      if (key === calculatedColorScheme) {\n        // 4.1 Merge the selected color scheme to the theme\n        Object.keys(scheme).forEach(schemeKey => {\n          if (scheme[schemeKey] && typeof scheme[schemeKey] === 'object') {\n            // shallow merge the 1st level structure of the theme.\n            theme[schemeKey] = (0, _extends2.default)({}, theme[schemeKey], scheme[schemeKey]);\n          } else {\n            theme[schemeKey] = scheme[schemeKey];\n          }\n        });\n        if (theme.palette) {\n          theme.palette.colorScheme = key;\n        }\n      }\n    });\n    const resolvedDefaultColorScheme = (() => {\n      if (typeof defaultColorScheme === 'string') {\n        return defaultColorScheme;\n      }\n      if (defaultMode === 'dark') {\n        return defaultColorScheme.dark;\n      }\n      return defaultColorScheme.light;\n    })();\n    themeProp.defaultColorScheme = resolvedDefaultColorScheme;\n    themeProp.colorSchemeSelector = colorSchemeSelector;\n    themeProp.attribute = attribute;\n    if (!theme.getColorSchemeSelector) {\n      theme.getColorSchemeSelector = targetColorScheme => `[${attribute}=\"${targetColorScheme}\"] &`;\n    }\n\n    // 5. Declaring effects\n    // 5.1 Updates the selector value to use the current color scheme which tells CSS to use the proper stylesheet.\n    React.useEffect(() => {\n      if (colorScheme && colorSchemeNode) {\n        // attaches attribute to <html> because the css variables are attached to :root (html)\n        colorSchemeNode.setAttribute(attribute, colorScheme);\n      }\n    }, [colorScheme, attribute, colorSchemeNode]);\n\n    // 5.2 Remove the CSS transition when color scheme changes to create instant experience.\n    // credit: https://github.com/pacocoursey/next-themes/blob/b5c2bad50de2d61ad7b52a9c5cdc801a78507d7a/index.tsx#L313\n    React.useEffect(() => {\n      let timer;\n      if (disableTransitionOnChange && hasMounted.current && documentNode) {\n        const css = documentNode.createElement('style');\n        css.appendChild(documentNode.createTextNode(DISABLE_CSS_TRANSITION));\n        documentNode.head.appendChild(css);\n\n        // Force browser repaint\n        (() => window.getComputedStyle(documentNode.body))();\n        timer = setTimeout(() => {\n          documentNode.head.removeChild(css);\n        }, 1);\n      }\n      return () => {\n        clearTimeout(timer);\n      };\n    }, [colorScheme, disableTransitionOnChange, documentNode]);\n    React.useEffect(() => {\n      hasMounted.current = true;\n      return () => {\n        hasMounted.current = false;\n      };\n    }, []);\n    const contextValue = React.useMemo(() => ({\n      allColorSchemes,\n      colorScheme,\n      darkColorScheme,\n      lightColorScheme,\n      mode,\n      setColorScheme,\n      setMode,\n      systemMode\n    }), [allColorSchemes, colorScheme, darkColorScheme, lightColorScheme, mode, setColorScheme, setMode, systemMode]);\n    let shouldGenerateStyleSheet = true;\n    if (disableStyleSheetGeneration || nested && (upperTheme == null ? void 0 : upperTheme.cssVarPrefix) === cssVarPrefix) {\n      shouldGenerateStyleSheet = false;\n    }\n    const element = /*#__PURE__*/(0, _jsxRuntime.jsxs)(React.Fragment, {\n      children: [shouldGenerateStyleSheet && /*#__PURE__*/(0, _jsxRuntime.jsx)(React.Fragment, {\n        children: (((_theme$generateStyleS = theme.generateStyleSheets) == null ? void 0 : _theme$generateStyleS.call(theme)) || []).map((styles, index) => /*#__PURE__*/(0, _jsxRuntime.jsx)(_styledEngine.GlobalStyles, {\n          styles: styles\n        }, index))\n      }), /*#__PURE__*/(0, _jsxRuntime.jsx)(_ThemeProvider.default, {\n        themeId: scopedTheme ? themeId : undefined,\n        theme: resolveTheme ? resolveTheme(theme) : theme,\n        children: children\n      })]\n    });\n    if (nested) {\n      return element;\n    }\n    return /*#__PURE__*/(0, _jsxRuntime.jsx)(ColorSchemeContext.Provider, {\n      value: contextValue,\n      children: element\n    });\n  }\n  process.env.NODE_ENV !== \"production\" ? CssVarsProvider.propTypes = {\n    /**\n     * The body attribute name to attach colorScheme.\n     */\n    attribute: _propTypes.default.string,\n    /**\n     * The component tree.\n     */\n    children: _propTypes.default.node,\n    /**\n     * The node used to attach the color-scheme attribute\n     */\n    colorSchemeNode: _propTypes.default.any,\n    /**\n     * The CSS selector for attaching the generated custom properties\n     */\n    colorSchemeSelector: _propTypes.default.string,\n    /**\n     * localStorage key used to store `colorScheme`\n     */\n    colorSchemeStorageKey: _propTypes.default.string,\n    /**\n     * The initial color scheme used.\n     */\n    defaultColorScheme: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.object]),\n    /**\n     * The initial mode used.\n     */\n    defaultMode: _propTypes.default.string,\n    /**\n     * If `true`, the provider creates its own context and generate stylesheet as if it is a root `CssVarsProvider`.\n     */\n    disableNestedContext: _propTypes.default.bool,\n    /**\n     * If `true`, the style sheet won't be generated.\n     *\n     * This is useful for controlling nested CssVarsProvider behavior.\n     */\n    disableStyleSheetGeneration: _propTypes.default.bool,\n    /**\n     * Disable CSS transitions when switching between modes or color schemes.\n     */\n    disableTransitionOnChange: _propTypes.default.bool,\n    /**\n     * The document to attach the attribute to.\n     */\n    documentNode: _propTypes.default.any,\n    /**\n     * The key in the local storage used to store current color scheme.\n     */\n    modeStorageKey: _propTypes.default.string,\n    /**\n     * The window that attaches the 'storage' event listener.\n     * @default window\n     */\n    storageWindow: _propTypes.default.any,\n    /**\n     * The calculated theme object that will be passed through context.\n     */\n    theme: _propTypes.default.object\n  } : void 0;\n  const defaultLightColorScheme = typeof designSystemColorScheme === 'string' ? designSystemColorScheme : designSystemColorScheme.light;\n  const defaultDarkColorScheme = typeof designSystemColorScheme === 'string' ? designSystemColorScheme : designSystemColorScheme.dark;\n  const getInitColorSchemeScript = params => (0, _getInitColorSchemeScript.default)((0, _extends2.default)({\n    attribute: defaultAttribute,\n    colorSchemeStorageKey: defaultColorSchemeStorageKey,\n    defaultMode: designSystemMode,\n    defaultLightColorScheme,\n    defaultDarkColorScheme,\n    modeStorageKey: defaultModeStorageKey\n  }, params));\n  return {\n    CssVarsProvider,\n    useColorScheme,\n    getInitColorSchemeScript\n  };\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}